version: "3.7"
services:
  redis:
    container_name: redis
    restart: "no"
    image: redis:alpine
    ports:
      - target: 6379
        published: 6379
        protocol: tcp
        mode: host
    networks:
      - backend
    volumes:
      - type: volume
        source: redis-data
        target: /data
        volume:
          nocopy: true
      - type: bind
        source: ./redis.dev.conf
        target: /usr/local/etc/redis/redis.conf      
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
  flaskapp:
    container_name: flaskapp
    restart: "no"
    build:
      context: .
      dockerfile: Dockerfile-server
    ports:
      - target: 5000
        published: 5000
        protocol: tcp
        mode: host
    networks:
      - frontend
      - backend
    volumes:
      - type: bind
        source: ./server
        target: /opt/flaskapp
    depends_on:
      - redis
    environment:
      - FLASK_ENV=development
      - STORAGE_HOST=redis
    command: [ "flask", "run", "-h", "0.0.0.0", "-p", "5000" ]
  sandbox:
    container_name: sandbox
    restart: "no"
    build:
      context: .
      args:
        buildenv: development
      target: build
      dockerfile: Dockerfile-sandbox
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    networks:
      - frontend
    volumes:
      - type: bind
        source: ./sandbox
        target: /opt/sandbox
    command: [ "npm", "run", "start" ]
volumes:
  redis-data:

networks:
  frontend:
  backend:
    internal: true
